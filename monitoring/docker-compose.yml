version: '3.8'

services:
  mysql:
      image: mysql:8.0
      container_name: mysql-monitoring
      environment:
        MYSQL_DATABASE: land_of_rex
        MYSQL_ROOT_PASSWORD: 1234
      ports:
        - "3307:3306"
      volumes:
        - mysql-data:/var/lib/mysql    # 데이터 영속성 유지
      networks:
        - monitoring-test
      command:
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_unicode_ci
      healthcheck:
        test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "-p1234", "-e", "SELECT 1"]
        interval: 5s
        timeout: 5s
        retries: 10
  spring-monitoring:
    build:
      context: ..    # 상위 디렉토리를 빌드 컨텍스트로 설정
      dockerfile: monitoring/Dockerfile.monitoring
    container_name: spring-monitoring
    ports:
      - "8081:8080"
    environment:
      DB_HOST: mysql
      # host.docker.internal을 사용하여 로컬 MySQL 연결
      DB_USERNAME: root
      DB_PASSWORD: 1234
    # Windows나 Mac에서 host.docker.internal 사용을 위한 설정
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - monitoring-test

  prometheus-test:
    image: prom/prometheus:latest
    container_name: prometheus-test
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring-test

  grafana-test:
    image: grafana/grafana:latest
    container_name: grafana-test
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana-test-storage:/var/lib/grafana
    networks:
      - monitoring-test

networks:
  monitoring-test:
    name: monitoring-test
    driver: bridge

volumes:
  grafana-test-storage:
  mysql-data: